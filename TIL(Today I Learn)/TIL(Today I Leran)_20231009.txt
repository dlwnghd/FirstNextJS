Part 5. Final Project : 커머스 서비스 만들기
    Ch 03. 커머스 기능 구현하기
      06. 회원 체계 다루기
        회원의 종류?
          비회원 / 무료(준)회원 / 유료(정)회원 / 휴면회원 / 탈퇴회원
          서비스의 목적에 따라 회원 구성이 달라질 수 있음

        회원을 나누는 기준?
          - 아무것도 하지 않았는가? 비회원
          - 회원 가입 과정을 거쳤는가? 준회원
          - 유료 결제 등 특정 액션을 했는가? 정회원
          - 회원 가입 후 기간이 많이 지났는가? 휴면회원
          - 회원 탈퇴 과정을 거쳤는가? 탈퇴회원

        회원 별 권한
          비회원: 컨텐츠 확인 / 검색 / 회원가입
          준회원: 컨텐츠 확인 / 검색 / trial 기능 / 로그인 / 정회원 승격
          정회원: 컨텐츠 확인 / 검색 / 로그인 / 실제 기능

        회원 가입의 이점?
          고객의 정보를 활용할 수 있다.
          이전의 정보를 활용해서 유의미한 정보를 제공
          알림을 보낼 수 있음 => 결국 서비스를 재이용율 UP

        회원가입은 큰 허들
          정보제공 동의
          마케팅 관련 약관 동의
          개인 정보 입력…
          서비스의 효용을 전달해서 설득과정이 필요

        여러 서비스들은
          회원 가입 단계를 가볍게 만들기 위해 고민
          비회원 vs 회원 간의 권한 구분이 필수적이지 않다면
          회원 가입 단계를 필수로 만들 필요가 없음
            ex. 비회원 구매가 가능한 커머스 서비스

        로그인이란?
          본인은 인증하는 과정
          로그인 과정 또한
          계정과 비밀번호를 기억해야 하는 등
          여러가지 허들이 존재

        여러 서비스들은
          로그인 단계를 가볍게 만들기 위해 고민
          개별 아이디와 비밀번호를 만들지 않고
          기존의 아이디를 활용한다.

        OAuth
          그동안 github 계정을 여러 서비스를 사용했다.
          vercel / utterance / planet scale 등…

        우리 커머스 서비스에서는
          - 비회원: 컨텐츠 확인 / 검색
          - 회원: 찜하기 / 장바구니 / 구매
          - 회원 가입과 로그인에 Google OAuth를 활용

        [회원 체계 구성]
        회원 체계             => 기준 / 권한
        회원 관련 플로우      => 회원가입 / 로그인
        OAuth                 => 다른 서비스의 계정을 활용
        우리 서비스 회원 체계 => 회원에게만 권한 / Google OAuth 활용

        ⚠️검색 구현에서 전체 카테고리의 5페이지에서 카테고리 버튼을 클릭
          => 해당 카테고리의 5페이지의 정보를 호출하는 api요청
            => 존재하지 않는 데이터를 호출하는 이슈 발생
              ✅ onChange에 handleCategoryChange라는 핸들러를 생성
                => 카테고리 변경 시 페이지 번호를 1로 바꾸어 요청을 보내도록 수정